# Generated by Django 2.2.12 on 2020-04-09 08:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import membranes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('forcefields', '0001_initial'),
        ('homepage', '0001_initial'),
        ('lipids', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.DecimalField(decimal_places=4, max_digits=7)),
                ('side', models.CharField(choices=[('UP', 'Upper leaflet'), ('LO', 'Lower leaflet'), ('UP2', 'Upper leaflet 2'), ('LO2', 'Lower leaflet 2'), ('UP3', 'Upper leaflet 3'), ('LO3', 'Lower leaflet 3'), ('UP4', 'Upper leaflet 4'), ('LO4', 'Lower leaflet 4'), ('UP5', 'Upper leaflet 5'), ('LO5', 'Lower leaflet 5'), ('UP6', 'Upper leaflet 6'), ('LO6', 'Lower leaflet 6'), ('UP7', 'Upper leaflet 7'), ('LO7', 'Lower leaflet 7'), ('UP8', 'Upper leaflet 8'), ('LO8', 'Lower leaflet 8'), ('UP9', 'Upper leaflet 9'), ('LO9', 'Lower leaflet 9'), ('UP10', 'Upper leaflet 10'), ('LO10', 'Lower leaflet 10'), ('UP11', 'Upper leaflet 11'), ('LO11', 'Lower leaflet 11'), ('UP12', 'Upper leaflet 12'), ('LO12', 'Lower leaflet 12'), ('UP13', 'Upper leaflet 13'), ('LO13', 'Lower leaflet 13'), ('UP14', 'Upper leaflet 14'), ('LO14', 'Lower leaflet 14'), ('UP15', 'Upper leaflet 15'), ('LO15', 'Lower leaflet 15'), ('UP16', 'Upper leaflet 16'), ('LO16', 'Lower leaflet 16'), ('UP17', 'Upper leaflet 17'), ('LO17', 'Lower leaflet 17'), ('UP18', 'Upper leaflet 18'), ('LO18', 'Lower leaflet 18'), ('UP19', 'Upper leaflet 19'), ('LO19', 'Lower leaflet 19'), ('UP20', 'Upper leaflet 20'), ('LO20', 'Lower leaflet 20'), ('UP21', 'Upper leaflet 21'), ('LO21', 'Lower leaflet 21'), ('UP22', 'Upper leaflet 22'), ('LO22', 'Lower leaflet 22'), ('UP23', 'Upper leaflet 23'), ('LO23', 'Lower leaflet 23'), ('UP24', 'Upper leaflet 24'), ('LO24', 'Lower leaflet 24'), ('UP25', 'Upper leaflet 25'), ('LO25', 'Lower leaflet 25'), ('UP26', 'Upper leaflet 26'), ('LO26', 'Lower leaflet 26'), ('UP27', 'Upper leaflet 27'), ('LO27', 'Lower leaflet 27'), ('UP28', 'Upper leaflet 28'), ('LO28', 'Lower leaflet 28'), ('UP29', 'Upper leaflet 29'), ('LO29', 'Lower leaflet 29'), ('UP30', 'Upper leaflet 30'), ('LO30', 'Lower leaflet 30'), ('UP31', 'Upper leaflet 31'), ('LO31', 'Lower leaflet 31'), ('UP32', 'Upper leaflet 32'), ('LO32', 'Lower leaflet 32'), ('UP33', 'Upper leaflet 33'), ('LO33', 'Lower leaflet 33'), ('UP34', 'Upper leaflet 34'), ('LO34', 'Lower leaflet 34'), ('UP35', 'Upper leaflet 35'), ('LO35', 'Lower leaflet 35'), ('UP36', 'Upper leaflet 36'), ('LO36', 'Lower leaflet 36'), ('UP37', 'Upper leaflet 37'), ('LO37', 'Lower leaflet 37'), ('UP38', 'Upper leaflet 38'), ('LO38', 'Lower leaflet 38'), ('UP39', 'Upper leaflet 39'), ('LO39', 'Lower leaflet 39'), ('UP40', 'Upper leaflet 40'), ('LO40', 'Lower leaflet 40'), ('UP41', 'Upper leaflet 41'), ('LO41', 'Lower leaflet 41'), ('UP42', 'Upper leaflet 42'), ('LO42', 'Lower leaflet 42'), ('UP43', 'Upper leaflet 43'), ('LO43', 'Lower leaflet 43'), ('UP44', 'Upper leaflet 44'), ('LO44', 'Lower leaflet 44'), ('UP45', 'Upper leaflet 45'), ('LO45', 'Lower leaflet 45'), ('UP46', 'Upper leaflet 46'), ('LO46', 'Lower leaflet 46'), ('UP47', 'Upper leaflet 47'), ('LO47', 'Lower leaflet 47'), ('UP48', 'Upper leaflet 48'), ('LO48', 'Lower leaflet 48'), ('UP49', 'Upper leaflet 49'), ('LO49', 'Lower leaflet 49'), ('UP50', 'Upper leaflet 50'), ('LO50', 'Lower leaflet 50'), ('UP51', 'Upper leaflet 51'), ('LO51', 'Lower leaflet 51'), ('UNK', 'Not in leaflet')], default='UP', max_length=4)),
                ('lipid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lipids.Lipid')),
            ],
        ),
        migrations.CreateModel(
            name='Membrane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, unique=True)),
                ('nb_liptypes', models.PositiveIntegerField(null=True)),
                ('lipids', models.ManyToManyField(through='membranes.Composition', to='lipids.Lipid')),
            ],
        ),
        migrations.CreateModel(
            name='MembraneProt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prot', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MembraneTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MembraneTopol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('temperature', models.PositiveIntegerField()),
                ('equilibration', models.PositiveIntegerField()),
                ('mem_file', models.FileField(blank=True, help_text='.pdb and .gro files are supported', null=True, upload_to=membranes.models.directory_path, validators=[membranes.models.validate_file_extension, membranes.models.validate_mem_size])),
                ('compo_file', models.FileField(blank=True, null=True, upload_to=membranes.models.directory_path)),
                ('other_file', models.FileField(blank=True, help_text='Use a zip file containing these files', null=True, upload_to=membranes.models.directory_path, validators=[membranes.models.validate_otherfile_extension, membranes.models.validate_other_size])),
                ('nb_lipids', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateField(auto_now=True)),
                ('curator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('forcefield', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forcefields.Forcefield')),
            ],
        ),
        migrations.CreateModel(
            name='TopolComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('side', models.CharField(choices=[('UP', 'Upper leaflet'), ('LO', 'Lower leaflet'), ('UP2', 'Upper leaflet 2'), ('LO2', 'Lower leaflet 2'), ('UP3', 'Upper leaflet 3'), ('LO3', 'Lower leaflet 3'), ('UP4', 'Upper leaflet 4'), ('LO4', 'Lower leaflet 4'), ('UP5', 'Upper leaflet 5'), ('LO5', 'Lower leaflet 5'), ('UP6', 'Upper leaflet 6'), ('LO6', 'Lower leaflet 6'), ('UP7', 'Upper leaflet 7'), ('LO7', 'Lower leaflet 7'), ('UP8', 'Upper leaflet 8'), ('LO8', 'Lower leaflet 8'), ('UP9', 'Upper leaflet 9'), ('LO9', 'Lower leaflet 9'), ('UP10', 'Upper leaflet 10'), ('LO10', 'Lower leaflet 10'), ('UP11', 'Upper leaflet 11'), ('LO11', 'Lower leaflet 11'), ('UP12', 'Upper leaflet 12'), ('LO12', 'Lower leaflet 12'), ('UP13', 'Upper leaflet 13'), ('LO13', 'Lower leaflet 13'), ('UP14', 'Upper leaflet 14'), ('LO14', 'Lower leaflet 14'), ('UP15', 'Upper leaflet 15'), ('LO15', 'Lower leaflet 15'), ('UP16', 'Upper leaflet 16'), ('LO16', 'Lower leaflet 16'), ('UP17', 'Upper leaflet 17'), ('LO17', 'Lower leaflet 17'), ('UP18', 'Upper leaflet 18'), ('LO18', 'Lower leaflet 18'), ('UP19', 'Upper leaflet 19'), ('LO19', 'Lower leaflet 19'), ('UP20', 'Upper leaflet 20'), ('LO20', 'Lower leaflet 20'), ('UP21', 'Upper leaflet 21'), ('LO21', 'Lower leaflet 21'), ('UP22', 'Upper leaflet 22'), ('LO22', 'Lower leaflet 22'), ('UP23', 'Upper leaflet 23'), ('LO23', 'Lower leaflet 23'), ('UP24', 'Upper leaflet 24'), ('LO24', 'Lower leaflet 24'), ('UP25', 'Upper leaflet 25'), ('LO25', 'Lower leaflet 25'), ('UP26', 'Upper leaflet 26'), ('LO26', 'Lower leaflet 26'), ('UP27', 'Upper leaflet 27'), ('LO27', 'Lower leaflet 27'), ('UP28', 'Upper leaflet 28'), ('LO28', 'Lower leaflet 28'), ('UP29', 'Upper leaflet 29'), ('LO29', 'Lower leaflet 29'), ('UP30', 'Upper leaflet 30'), ('LO30', 'Lower leaflet 30'), ('UP31', 'Upper leaflet 31'), ('LO31', 'Lower leaflet 31'), ('UP32', 'Upper leaflet 32'), ('LO32', 'Lower leaflet 32'), ('UP33', 'Upper leaflet 33'), ('LO33', 'Lower leaflet 33'), ('UP34', 'Upper leaflet 34'), ('LO34', 'Lower leaflet 34'), ('UP35', 'Upper leaflet 35'), ('LO35', 'Lower leaflet 35'), ('UP36', 'Upper leaflet 36'), ('LO36', 'Lower leaflet 36'), ('UP37', 'Upper leaflet 37'), ('LO37', 'Lower leaflet 37'), ('UP38', 'Upper leaflet 38'), ('LO38', 'Lower leaflet 38'), ('UP39', 'Upper leaflet 39'), ('LO39', 'Lower leaflet 39'), ('UP40', 'Upper leaflet 40'), ('LO40', 'Lower leaflet 40'), ('UP41', 'Upper leaflet 41'), ('LO41', 'Lower leaflet 41'), ('UP42', 'Upper leaflet 42'), ('LO42', 'Lower leaflet 42'), ('UP43', 'Upper leaflet 43'), ('LO43', 'Lower leaflet 43'), ('UP44', 'Upper leaflet 44'), ('LO44', 'Lower leaflet 44'), ('UP45', 'Upper leaflet 45'), ('LO45', 'Lower leaflet 45'), ('UP46', 'Upper leaflet 46'), ('LO46', 'Lower leaflet 46'), ('UP47', 'Upper leaflet 47'), ('LO47', 'Lower leaflet 47'), ('UP48', 'Upper leaflet 48'), ('LO48', 'Lower leaflet 48'), ('UP49', 'Upper leaflet 49'), ('LO49', 'Lower leaflet 49'), ('UP50', 'Upper leaflet 50'), ('LO50', 'Lower leaflet 50'), ('UP51', 'Upper leaflet 51'), ('LO51', 'Lower leaflet 51'), ('UNK', 'Not in leaflet')], default='UP', max_length=4)),
                ('lipid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lipids.Lipid')),
                ('membrane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membranes.MembraneTopol')),
                ('topology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lipids.Topology')),
            ],
        ),
        migrations.CreateModel(
            name='MemComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('membrane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membranes.MembraneTopol')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='membranetopol',
            name='lipids',
            field=models.ManyToManyField(through='membranes.TopolComposition', to='lipids.Lipid'),
        ),
        migrations.AddField(
            model_name='membranetopol',
            name='membrane',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='membranes.Membrane'),
        ),
        migrations.AddField(
            model_name='membranetopol',
            name='prot',
            field=models.ManyToManyField(blank=True, to='membranes.MembraneProt'),
        ),
        migrations.AddField(
            model_name='membranetopol',
            name='reference',
            field=models.ManyToManyField(to='homepage.Reference'),
        ),
        migrations.AddField(
            model_name='membranetopol',
            name='software',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forcefields.Software'),
        ),
        migrations.AddField(
            model_name='membrane',
            name='tag',
            field=models.ManyToManyField(blank=True, to='membranes.MembraneTag'),
        ),
        migrations.AddField(
            model_name='composition',
            name='membrane',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membranes.Membrane'),
        ),
    ]
