;;;;;; Martini lipid topology for C16:0-C18:0 LPC (PPC), generated using:
; The Martini lipid itp generator version 0.4  Args are: -o martini_v2.0_PPC_01.itp -alname P0PC-alhead 'C P' -allink 'G G' -altail '- CCCC'
; WARNING: Lipids topology was generated following the Martini 2.0 guidelines but this specific lipid type might
;          not have been tested and should therefore be used with care. 
;
; Description:
;   A general model lysophosphatidylcholine (LPC) lipid corresponding to atomistic C16:0 palmitic acid - C18:0 stearoyl tails.
; Parameterization:
;   This topology follows the standard Martini 2.0 lipid definitions and building block rules.
; Reference(s): 
;   S.J. Marrink, A.H. de Vries, A.E. Mark. Coarse grained model for semi-quantitative lipid simulations. JPC-B, 108:750-760, 
;   2004. doi:10.1021/jp036508g 
;   S.J. Marrink, H.J. Risselada, S. Yefimov, D.P. Tieleman, A.H. de Vries. The MARTINI force field: coarse grained model for 
;   biomolecular simulations. JPC-B, 111:7812-7824, 2007. doi:10.1021/jp071097f 
;   T.A. Wassenaar, H.I. Ingolfsson, R.A. Bockmann, D.P. Tieleman, S.J. Marrink. Computational lipidomics with insane: a versatile 
;   tool for generating custom membranes for molecular simulations. JCTC, 150410125128004, 2015. doi:10.1021/acs.jctc.5b00209
; Created: 2015.04.20
;
;@INSANE alhead=C P, allink=G G, altail=- CCCC, alname=PPC, charge=0.0
;@RESNTEST PPC==P0PCif: atoms[0]==NC3
;@BEADS NC3 PO4 GL1 GL2 C1B C2B C3B C4B 
;@BONDS NC3-PO4 PO4-GL1 GL1-GL2 GL2-C1B C1B-C2B C2B-C3B C3B-C4B 
;

[moleculetype]
; molname      nrexcl
  P0PC         1

[atoms]
; id 	type 	resnr 	residu 	atom 	cgnr 	charge
   1 	Q0 	 1 	P0PC	NC3 	 1 	1.0 	
   2 	Qa 	 1 	P0PC	PO4 	 2 	-1.0 	
   3 	P1 	 1 	P0PC	GL1 	 3 	0 	
   4 	Na 	 1 	P0PC	GL2 	 4 	0 	
   5 	C1 	 1 	P0PC	C1B 	 5 	0 	
   6 	C1 	 1 	P0PC	C2B 	 6 	0 	
   7 	C1 	 1 	P0PC	C3B 	 7 	0 	
   8 	C1 	 1 	P0PC	C4B 	 8 	0 	

[bonds]
;  i  j 	funct 	length 	force.c.
   1  2 	1 	0.47 	1250 	
   2  3 	1 	0.47 	1250 	
   3  4 	1 	0.37 	1250 	
   4  5 	1 	0.47 	1250 	
   5  6 	1 	0.47 	1250 	
   6  7 	1 	0.47 	1250 	
   7  8 	1 	0.47 	1250 	

[angles]
;  i  j  k 	funct 	angle 	force.c.
   2  3  4 	2 	180.0 	25.0 	
   3  4  5 	2 	180.0 	25.0 	
   4  5  6 	2 	180.0 	25.0 	
   5  6  7 	2 	180.0 	25.0 	
   6  7  8 	2 	180.0 	25.0 	


; Include Position restraint file
#ifdef POSRES
#include "P0PC_posre.itp"
#endif
